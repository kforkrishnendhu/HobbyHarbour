@{
    Layout = "_Layout";
}
@model List<Product>

@{
    ViewData["Title"] = "Home Page";
}


<style type="text/css">
    /* Style for the modal container */
    .modal {
        display: none;
        position: fixed;
        z-index: 1;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent black background */
    }

    /* Style for the modal content */
    .modal-content {
        background-color: #fff;
        margin: 10% auto;
        padding: 20px;
        border: 1px solid #888;
        width: 70%;
        border-radius: 5px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
        text-align: center;
        position: relative;
    }

    /* Style for the close button */
    .close {
        position: absolute;
        top: 10px;
        right: 10px;
        font-size: 20px;
        cursor: pointer;
    }

    /* Style for the input field and button */
    input[type="tel"] {
        width: 100%;
        padding: 10px;
        margin: 10px 0;
        border: 1px solid #ccc;
        border-radius: 4px;
    }

    button {
        background-color: #fb531ae0; /* Blue button color */
        color: white;
        padding: 10px 20px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
    }

        button:hover {
            background-color: #fb211ae0; /* Darker blue on hover */
        }

    .card-img-top {
        max-height: 200px;
        object-fit: contain;
        width: 100%;
    }

    .card {
        max-height: 400px; /* Set a fixed height for the cards */
        overflow: hidden;
        padding-top: 20px;
    }

    .category-images {
        display: flex;
        justify-content: space-between;
        margin-bottom: 20px;
    }

    .category-image-container {
        text-align: center;
        flex: 1; /* Distribute the available space equally */
        margin-right: 20px; /* Add spacing between category images */
    }

    .category-image {
        width: 100px;
        height: 100px;
        border-radius: 50%;
        margin-bottom: 5px;
        object-fit: cover;
    }

    .category-name {
        font-size: 14px;
    }

    .pad {
        padding-left: 40px;
        padding-right: 40px;
        padding-top: 20px;
        padding-bottom: 50px;
    }

    .card-title {
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }
</style>

<div class="container">

    <div class="category-images pad">
        <a asp-action="Index">
            <div class="category-image-container">
                <img src="~/categoryImages/5.webp" class="category-image" alt="">
                <div>All Products</div>
            </div>
        </a>
        <a asp-action="BoardGames">
            <div class="category-image-container">
                <img src="~/categoryImages/1.webp" class="category-image" alt="">
                <div>Board Games</div>
            </div>
        </a>
        <a asp-action="OutdoorToys">
            <div class="category-image-container">
                <img src="~/categoryImages/2.webp" class="category-image" alt="">
                <div>Outdoor Toys</div>
            </div>
        </a>
        <a asp-action="RemoteToys">
            <div class="category-image-container">
                <img src="~/categoryImages/3.webp" class="category-image" alt="">
                <div>Remote Control</div>
            </div>
        </a>
        <a asp-action="SoftToys">
            <div class="category-image-container">
                <img src="~/categoryImages/4.webp" class="category-image" alt="">
                <div>Soft Toys</div>
            </div>
        </a>
    </div>

    <div class="row">
        @foreach (var product in Model)
        {
            <div class="col-md-3 mb-3">
                <div class="card border-0 shadow border-top border-5 rounded">
                    @if (product.Images != null && product.Images.Any())
                    {
                        <img src="@product.Images.FirstOrDefault().ImageUrl" class="card-img-top" alt="Product Image">
                    }
                    else
                    {
                        <!-- Default image or placeholder when no images are available -->
                        <img src="~/productImages/images/placeholder.png" id="show-img" class="card-img-top">
                    }

                    <div class="card-body" style="margin-top:20px;">
                        <h5 class="card-title h5 text-dark opacity-75 text-center text-uppercase">@product.ProductName</h5>
                        <p class="card-text text-center">Price: $@product.Price</p>
                        <p class="card-text text-center" style="margin-top:10px;">Category: @product.Category.CategoryName</p>
                    </div>
                    <div class="card-footer text-center" style="margin-top:10px;">
                        <a href="/Identity/Account/Login" class="btn btn-primary btn-block bg-gradient border-0">Details</a>

                    </div>
                </div>
            </div>
        }
    </div>
</div>



<!-- HTML for the OTP modal -->
<div id="otpModal" class="modal">
    <div class="modal-content">
        <span class="close" onclick="closeModal()">&times;</span>
        <h2>Enter Your Phone Number</h2>
        <input type="tel" id="phoneNumber" placeholder="Phone Number">
        <button onclick="requestOTP()">Request OTP</button>
    </div>
</div>

<!-- HTML for the OTP entry modal -->
<div id="otpEntryModal" class="modal">
    <div class="modal-content">
        <span class="close" onclick="closeOTPEntryModal()">&times;</span>
        <h2>Enter OTP</h2>
        <input type="text" id="otp" placeholder="Enter OTP">
        <button onclick="verifyOTP()">Verify OTP</button>
    </div>
</div>

<script>
    // JavaScript to control the modal
    function openModal() {
         var isAuthenticated = @User.Identity.IsAuthenticated.ToString().ToLower();

        // Open the modal only if the user is not authenticated
        if (!isAuthenticated) {
            var modal = document.getElementById("otpModal");
            modal.style.display = "block";
        }
    }

    function closeModal() {
        var modal = document.getElementById("otpModal");
        modal.style.display = "none";
    }

    function openOTPEntryModal() {
        var otpModal = document.getElementById("otpModal");
        otpModal.style.display = "none";

        var otpEntryModal = document.getElementById("otpEntryModal");
        otpEntryModal.style.display = "block";
    }

    function closeOTPEntryModal() {
        var otpEntryModal = document.getElementById("otpEntryModal");
        otpEntryModal.style.display = "none";

        var otpModal = document.getElementById("otpModal");
        otpModal.style.display = "block";
    }

    function requestOTP() {
        var phoneNumber = document.getElementById("phoneNumber").value;

        // Make an AJAX request to your server to request an OTP
        $.ajax({
            type: "POST",
            url: "/Home/OTPLogin",
            data: { phoneNumber: phoneNumber },
            success: function (response) {
                if (response.success) {
                    // Handle OTP verification success
                    openOTPEntryModal();
                } else {
                    // Handle OTP verification failure
                    alert("Error: " + response.message);
                    // You can show an error message or handle it as needed.
                }
                closeModal();
            },
            error: function (error) {
                // Handle error
                alert("Error sending OTP: " + error.responseText);
            }
        });
    }

    function verifyOTP() {
        var enteredOTP = document.getElementById("otp").value;
        var phoneNumber = document.getElementById("phoneNumber").value;

        // Make an AJAX request to your server to verify the entered OTP
        $.ajax({
            type: "POST",
            url: "/Home/VerifyOTP",
            data: { enteredOTP: enteredOTP, phoneNumber: phoneNumber },
            success: function (response) {
                if (response.success) {
                    // Handle OTP verification success
                    alert("OTP verified successfully.");
                    window.location.href = '/Customer/CustomerHome/Index';
                } else {
                    // Handle OTP verification failure
                    alert("Error: " + response.message);
                    // You can show an error message or handle it as needed.
                }
                closeOTPEntryModal();
            },
            error: function (error) {
                // Handle OTP verification error
                alert("Error verifying OTP: " + error.responseText);
                console.error(error);  // Log the error to the console for more details
                closeOTPEntryModal();
            }
        });
    }

    //window.onload = openModal;

    //// Check if the modal has been opened
    //var isModalOpened = localStorage.getItem('isModalOpened');

    //// If the modal hasn't been opened, execute the function and set the flag
    //if (!isModalOpened) {
    //    window.onload = function () {
    //        openModal();
    //        // Set the flag to indicate that the modal has been opened
    //        localStorage.setItem('isModalOpened', true);
    //    };
    //}
</script>