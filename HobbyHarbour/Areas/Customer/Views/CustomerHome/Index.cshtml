@{
    Layout = "_CustomerLayout";
}
@model HobbyHarbour.ViewModels.ProductIndexViewModel

@{
    ViewData["Title"] = "Products";
}
@*<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" />*@

<style>
    /* CSS for image size and card height */
    .card-img-top {
        max-height: 200px;
        object-fit: contain;
        width: 100%;
    }

    .card {
        max-height: 400px; /* Set a fixed height for the cards */
        overflow: hidden;
        padding-top: 20px;
    }

    .category-images {
        display: flex;
        justify-content: space-between;
        margin-bottom: 20px;
    }

    .category-image-container {
        text-align: center;
        flex: 1; /* Distribute the available space equally */
        margin-right: 20px; /* Add spacing between category images */
    }

    .category-image {
        width: 100px;
        height: 100px;
        border-radius: 50%;
        margin-bottom: 5px;
        object-fit: cover;
    }

    .category-name {
        font-size: 14px;
    }

    .pad {
        padding-left: 40px;
        padding-right: 40px;
        padding-top: 20px;
        padding-bottom: 50px;
    }

    .card-title {
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }
</style>

<div class="container">

    <div class="category-images pad">
        <a asp-action="Index">
            <div class="category-image-container">
                <img src="~/categoryImages/5.webp" class="category-image" alt="">
                <div>All Products</div>
            </div>
        </a>
        <a asp-action="BoardGames">
            <div class="category-image-container">
                <img src="~/categoryImages/1.webp" class="category-image" alt="">
                <div>Board Games</div>
            </div>
        </a>
        <a asp-action="OutdoorToys">
            <div class="category-image-container">
                <img src="~/categoryImages/2.webp" class="category-image" alt="">
                <div>Outdoor Toys</div>
            </div>
        </a>
        <a asp-action="RemoteToys">
            <div class="category-image-container">
                <img src="~/categoryImages/3.webp" class="category-image" alt="">
                <div>Remote Control</div>
            </div>
        </a>
        <a asp-action="SoftToys">
            <div class="category-image-container">
                <img src="~/categoryImages/4.webp" class="category-image" alt="">
                <div>Soft Toys</div>
            </div>
        </a>
    </div>

    <div class="row">
        @foreach (var product in Model.Products)
        {
            <div class="col-md-3 mb-3">
                <div class="card border-0 shadow border-top border-5 rounded">
                    @if (product.Images != null && product.Images.Any())
                    {
                        <img src="@product.Images.FirstOrDefault().ImageUrl" class="card-img-top" alt="Product Image">
                    }
                    else
                    {
                        <!-- Default image or placeholder when no images are available -->
                        <img src="~/productImages/images/placeholder.png" id="show-img" class="card-img-top">
                    }

                    <div class="card-body" style="margin-top:20px;">
                        <h5 class="card-title h5 text-dark opacity-75 text-center text-uppercase">@product.ProductName</h5>
                        <p class="card-text text-center">Price: $@product.Price</p>
                        <p class="card-text text-center" style="margin-top:10px;">Category: @product.Category.CategoryName</p>
                    </div>
                    <div class="card-footer text-center" style="margin-top:10px;">
                        <a href="@Url.Action("Details", "CustomerHome", new { id = product.ProductID })" class="btn btn-primary btn-block bg-gradient border-0">Details</a>

                    </div>
                </div>
            </div>
        }


    </div>
    <!-- Display pagination controls -->
    <div class="text-center">
        <nav aria-label="Page navigation">
            <ul class="pagination">
                @for (int i = 1; i <= Model.PageInfo.TotalPages; i++)
                {
                    <li class="page-item @(i == Model.PageInfo.CurrentPage ? "active" : "")">
                        <a class="page-link" href="@Url.Action("Index", new { page = i})">@i</a>
                    </li>
                }
            </ul>
        </nav>
    </div>
</div>
